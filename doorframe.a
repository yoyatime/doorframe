
	processor 6502
        include "vcs.h"
        include "macro.h"
        include "xmacro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constants
TitleScreen 	equ #$00
GameScreen 	equ #$01
EarthColu	equ #$D2
SkyColu		equ #$AA
KongolHeight  	equ #24
KongolInitY	equ #$20
KongolInitX     equ #$70
SkyHeight 	equ #16
ScoreHeight	equ #16
ScoreBKColu	equ #$A0
Standing	equ #$00
Ducking		equ #$01

XLimitLow	equ #$13
XLimitHigh	equ #$7C
YLimitLow	equ #$1A
YLimitHigh	equ #$99

; Variables segment

        	seg.u Variables
		org $80

; Title Screen Memory Overlay
Mode		ds 1		;0 = Title Screen
				;1 = Game
                                
; Game Screen Memory Overlay                
Temp		ds 1
KongolTablePtr  ds 2   
KongolYPos	ds 1		;range: (13,99)
KongolXPos 	ds 1		;range: (0F,8C)
KongolState	ds 1
Score		ds 1
ScoreDigitOnes  ds 1
ScoreDigitTens	ds 1
ScoreGFX	ds 1
GameSpeed	ds 1


;DigitGFX
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Code segment

	seg Code
        org $f000

Start
	CLEAN_START
        
        lda #%00000000
        sta CTRLPF
        
        lda #<KongolStandingG		;Assign P0 sprite pointer 
        sta KongolTablePtr
        lda #>KongolStandingG
        sta KongolTablePtr+1
        
        lda #KongolInitX
        sta KongolXPos
        
        lda #KongolInitY
        sta KongolYPos
        
        
        lda #%101		;Set doublewide P0
        sta NUSIZ0        
        
        lda #TitleScreen	;Start at Title Screen
        sta Mode		;
        
NextFrame
        lsr SWCHB	; test Game Reset switch
        bcc Start	; reset?
; 1 + 3 lines of VSYNC
	VERTICAL_SYNC
; 36 lines of underscan
	TIMER_SETUP 35
        TIMER_WAIT

; 192 lines of frame
        
        cmp Mode	 		;Jump to set gamemode
        bne DrawGameScreenStart

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Title Screen
DrawTitleScreen
	
        ldx #192		;X = scanline number
        ldy #$0			;y = vertical pixel height counter
        lda INPT4		;scan for player 0 input to switch to gameplay logic
	rol 			;player 0 joystick button is high bit of INPT4
        bcs DrawTitleScreenLoop
        lda #GameScreen		;set gamemode to game screen
        sta Mode		;
        
DrawTitleScreenLoop        
        txa
        adc #$FB		;Color Playfield with COLU X + 3
        sta COLUPF
        
        lda PF0Title,y		;Write title screen graphics
        sta PF0			;
        			
        lda PF1Title,y
        sta PF1
        
        lda PF2Title,y
        sta PF2
        
        lda PF3Title,y
        sta PF0
        
        lda PF4Title,y
        sta PF1
        
        lda PF5Title,y
        sta PF2
        
        txa
        and #%00000111		;increment Y every 4th scanline
        cmp #%00000100		;
        bne TitleLineFinish	;
        iny			;
        
TitleLineFinish    
        
        
        sta WSYNC
	dex
        bne DrawTitleScreenLoop
        jmp Overscan



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Game Screen



DrawGameScreenStart
	ldy #192		;Y -> scanline number
	
        
	lda INPT4        	
        rol 			;player 0 joystick button is high bit of INPT4
        bcs TestRight
        
        lda #<KongolDuckingG
        sta KongolTablePtr
        
        lda #>KongolDuckingG
        sta KongolTablePtr+1
        
        lda #Ducking
        sta KongolState
        jmp InputDone
        
TestRight
	lda #<KongolStandingG
        sta KongolTablePtr
        
        lda #>KongolStandingG
        sta KongolTablePtr+1

	lda #Standing
        sta KongolState
        lda SWCHA		

	and #%10000000		;Test Joystick Right
        bne TestLeft
        inc KongolXPos
        jmp InputDone
        
TestLeft
	lda SWCHA
	and #%01000000		;Test Joystick Left
        
        bne InputDone
        dec KongolXPos
        
InputDone
	sta WSYNC
	ldx #0			;Clear playfield
        stx PF0
        stx PF1
        stx PF2
        
        lda KongolXPos		;Horizontal Bound Checking
        cmp #XLimitLow
        bpl InBoundsLow

        lda XLimitLow
        sta KongolXPos
        
InBoundsLow
	cmp #XLimitHigh
        bcc InBounds
        lda #XLimitHigh
        sta KongolXPos
        
InBounds
        sta WSYNC
        lda KongolXPos		;set 
        jsr SetHorizPos
        
        
     
      
        ldx #6			;X -> iterations of sky 
        lda #$AA 		;set BK sky to blue
        
        sta COLUBK
        
        ;lda #$00		;Clear Playfield
        
        
        
DrawSkyline
	sta WSYNC
	lda #EarthColu		;set PF mountains to green
        sta COLUPF
        lda #0
        ;sta PF1
        ;sta PF0

        sta WSYNC		;2 scanlines of sky without mountains
        
        sta WSYNC		;
        
        
DrawSkylineLoop
        lda PF0Sky,X
        sta PF0
        
        lda PF1Sky,X
        sta PF1
        
        lda PF2Sky,X
        sta PF2
        
        
        sta WSYNC		;2 scanline resolution for mountains
        sta WSYNC
        
        dex
        bne DrawSkylineLoop
        
        lda #$0		
        sta PF0
        sta PF1
        sta PF2
        lda #EarthColu		;set gamescreen BK to green
        sta COLUBK
        ldy #192 - SkyHeight - ScoreHeight	;number of scanlines remaining
        
	
        jsr DrawGameScreen
        		

DrawScore				
	lda #ScoreBKColu
        sta COLUBK

	lda Score			
        and #$0F
        sta Temp
        
        asl
        asl
        adc Temp
        sta ScoreDigitOnes
        
        lda Score
        and #$F0
        lsr
        lsr
        sta Temp
        lsr
        lsr
        adc Temp
        sta ScoreDigitTens
	
	
        ldx #5
        
DrawScoreLoop
	ldy ScoreDigitTens
        lda DigitsG,y
        and #$F0
        sta ScoreGFX
        ldy ScoreDigitOnes
        lda #$0
        sta PF1
        
        lda DigitsG,y
        and #$0F
        ora ScoreGFX
        sta ScoreGFX
        
        sta WSYNC
        ;
        sta PF1
        ldy ScoreGFX
        
        nop			;Wait for asymmetric PF
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        ldy #$0			;Clear right side of PF
        sty PF1
        sta WSYNC
        ;
        ;sty PF1
        inc ScoreDigitTens
        inc ScoreDigitOnes
        dex
        sta PF1
        bne DrawScoreLoop
        ldy #$0
        sty PF1
        sta WSYNC
        ;
        ;stx PF1
        ;sta WSYNC

        dex
        sta WSYNC
        ; bne DrawScoreLoop
	
        
        

; 29 lines of overscan
Overscan
	;inc Score
        ;inc Score
        
        lda #$00
        sta COLUBK	;set over/underscan BG to black
        sta COLUPF	;set over/underscan PF to black
        sta PF0
        sta PF1
        sta PF2
        sta GRP0
        sta GRP1
	
        
       
        
	TIMER_SETUP 29
        TIMER_WAIT
        
        
; total = 262 lines, go to next frame
        jmp NextFrame
 
DrawGameScreen
	 
        ;lda (KongolTablePtr),y
   	;sta GRP0
        
        
        tya				;Start of Skipdraw
        tax				;store y in x
        ;sec				;TODO Animate Ducking
        sbc KongolYPos			
        adc KongolHeight
        bcc SkipDraw
        tay
        lda (KongolTablePtr),y
        
KongolContinue
	sta GRP0
	lda KongolC,y
        sta COLUP0
        
        txa
        tay
        
        dey				;Free Cycles on visible scanlines
        sta WSYNC
					;TODO Draw Gates       
        
        bne DrawGameScreen
	
        lda ScoreHeight
        tay
        rts



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Skipdraw Bumper

SkipDraw
	lda #0
        beq KongolContinue


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Set horizontal position of Kongol
SetHorizPos
        sta HMCLR
        sta WSYNC       ; start a new line
        sec             ; set carry flag
DivideLoop
        sbc #15         ; subtract 15
        bcs DivideLoop  ; branch until negative
        eor #7          ; calculate fine offset
        asl
        asl
        asl
        asl
        sta HMP0,x      ; set fine offset
        sta RESP0,x     ; fix coarse position
        sta WSYNC
        sta HMOVE
        rts             ; return to caller 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Graphical Data

;---Sprite Data from PlayerPal 2600---

KongolStandingG
        .byte #%01100110;$06
        .byte #%01100110;$F0
        .byte #%01100110;$F0
        .byte #%00100100;$2C
        .byte #%00100100;$2C
        .byte #%00111100;$F2
        .byte #%00111100;$04
        .byte #%00111100;$2C
        .byte #%00111101;$2C
        .byte #%10111101;$2C
        .byte #%10111101;$F2
        .byte #%10111101;$F2
        .byte #%11111111;$2C
        .byte #%11111111;$2C
        .byte #%11111111;$2C
        .byte #%11111111;$18
        .byte #%00011000;$2C
        .byte #%00011000;$2C
        .byte #%00111100;$2C
        .byte #%00111100;$30
        .byte #%00111100;$2C
        .byte #%00011000;$F0
        .byte #%00011000;$F0
        .byte #%00011000;$F0
        
        
KongolDuckingG
        .byte #%01100110;$06
        .byte #%01100110;$F0
        .byte #%01100110;$F0
        .byte #%00100100;$2C
        .byte #%00100100;$2C
        .byte #%00111100;$F2
        .byte #%00111100;$04
        .byte #%00111100;$2C
        .byte #%00111101;$2C
        .byte #%10111101;$2C
        .byte #%10111101;$F2
        .byte #%10111101;$F2
        .byte #%11111111;$2C
        .byte #%11111111;$2C
        .byte #%11111111;$2C
        .byte #%11111111;$18
        .byte #%00000000;$2C
        .byte #%00011000;$2C
        .byte #%00111100;$2C
        .byte #%00111100;$30
        .byte #%00111100;$2C
        .byte #%00011000;$F0
        .byte #%00011000;$F0
        .byte #%00011000;$F0

KongolC
        .byte #$06;
        .byte #$F0;
        .byte #$F0;
        .byte #$2C;
        .byte #$2C;
        .byte #$F2;
        .byte #$04;
        .byte #$2C;
        .byte #$2C;
        .byte #$2C;
        .byte #$F2;
        .byte #$F2;
        .byte #$2C;
        .byte #$2C;
        .byte #$2C;
        .byte #$18;
        .byte #$2C;
        .byte #$2C;
        .byte #$2C;
        .byte #$30;
        .byte #$2C;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;

AxeG
        .byte #%00000000;$F2
        .byte #%00000000;$F2
        .byte #%10000000;$F2
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F0
        .byte #%10000000;$F2
        .byte #%11100000;$04
        .byte #%11110000;$06
        .byte #%11111000;$06
        .byte #%11111000;$06
        .byte #%11111000;$06
        .byte #%11111000;$06
        .byte #%11111000;$06
        .byte #%11111000;$06
        .byte #%11110000;$06
        .byte #%11100000;$02
        .byte #%00000000;$F0
        .byte #%00000000;$F0

AxeC
        .byte #$F2;
        .byte #$F2;
        .byte #$F2;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F0;
        .byte #$F2;
        .byte #$04;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$06;
        .byte #$02;
        .byte #$F0;
        .byte #$F0;
        
;---End Sprite Data---

;---Begin Digit Data---

DigitsG
	.byte %01110111
        .byte %01010101
	.byte %01010101
        .byte %01010101
        .byte %01110111
	
        .byte %00010001
        .byte %00010001
        .byte %00010001
        .byte %00010001
        .byte %00010001
        
        .byte %01110111
        .byte %00010001
        .byte %01110111
        .byte %01000100
        .byte %01110111
        
        .byte %01110111
        .byte %00010001
        .byte %01110111
        .byte %00010001
        .byte %01110111
        
        .byte %01010101
        .byte %01010101
        .byte %01110111
        .byte %00010001
        .byte %00010001
        
        .byte %01110111
        .byte %01000100
        .byte %01110111
        .byte %00010001
        .byte %01110111
        
        .byte %01110111
        .byte %01000100
        .byte %01110111
        .byte %01010101
        .byte %01110111
        
        .byte %01110111
        .byte %00010001
        .byte %00010001
        .byte %00010001
        .byte %00010001
        
        .byte %01110111
        .byte %01010101
        .byte %01110111
        .byte %01010101
        .byte %01110111
        
        .byte %01110111
        .byte %01010101
        .byte %01110111
        .byte %00010001
        .byte %01110111
        
        .byte %00100010
        .byte %01010101
        .byte %01110111
        .byte %01010101
        .byte %01010101
         
        .byte %01100110
        .byte %01010101
        .byte %01100110
        .byte %01010101
        .byte %01100110
        
        .byte %00110011
        .byte %01000100
        .byte %01000100
        .byte %01000100
        .byte %00110011
        
        .byte %01100110
        .byte %01010101
        .byte %01010101
        .byte %01010101
        .byte %01100110
        
        .byte %01110111
        .byte %01000100
        .byte %01100110
        .byte %01000100
        .byte %01110111
        
        .byte %01110111
        .byte %01000100
        .byte %01100110
        .byte %01000100
        .byte %01000100
        
;---End Digit Data

;---Begin Game Screen PF Data---

PF0Sky
	.byte %00000000
	.byte %11110000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000

PF1Sky
	.byte %00000000
	.byte %11111111
	.byte %11111111
	.byte %01111111
	.byte %00111111
	.byte %00011110
	.byte %00001100

PF2Sky
	.byte %00000000
	.byte %11111111
	.byte %01110011
	.byte %00100001
	.byte %00000000
	.byte %00000000
	.byte %00000000

;---End Game Screen PF Data---

;---Begin Title Screen PF Data---
PF0Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %10000000
	.byte %10000000
	.byte %10000000
	.byte %10000000
	.byte %00000000
	.byte %00000000
	.byte %11100000
	.byte %01100000
	.byte %10000000
	.byte %11100000
	.byte %00000000
	.byte %00000000
	.byte %10000000
	.byte %10000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000

PF1Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00101111
	.byte %01001001
	.byte %11001001
	.byte %00101111
	.byte %00000000
	.byte %00000000
	.byte %10111101
	.byte %00011001
	.byte %10011001
	.byte %10011001
	.byte %00000000
	.byte %00000000
	.byte %11111111
	.byte %11111111
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000

PF2Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %11010010
	.byte %01010110
	.byte %01011010
	.byte %11010010
	.byte %00000000
	.byte %00000000
	.byte %10010111
	.byte %10010100
	.byte %10010011
	.byte %11110100
	.byte %00000000
	.byte %00000000
	.byte %11111111
	.byte %11111111
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000

PF3Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %10110000
	.byte %10000000
	.byte %10100000
	.byte %10110000
	.byte %00000000
	.byte %00000000
	.byte %11100000
	.byte %00100000
	.byte %00100000
	.byte %11100000
	.byte %00000000
	.byte %00000000
	.byte %11110000
	.byte %11110000
	.byte %00000000
	.byte %10010000
	.byte %11110000
	.byte %11110000
	.byte %11100000
	.byte %11000000
	.byte %00000000

PF4Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %11101000
	.byte %00101000
	.byte %00101000
	.byte %11101111
	.byte %00000000
	.byte %00000000
	.byte %10111101
	.byte %00100001
	.byte %10100101
	.byte %10111101
	.byte %00000000
	.byte %00000000
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %11111111
	.byte %00000000

PF5Title
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00000000
	.byte %00111101
	.byte %00001101
	.byte %00110000
	.byte %00111100
	.byte %00000000
	.byte %00000000
	.byte %11110000
	.byte %00010000
	.byte %00110000
	.byte %11110111
	.byte %00000000
	.byte %00000000
	.byte %00000001
	.byte %00000001
	.byte %00000000
	.byte %00001001
	.byte %00001111
	.byte %00001111
	.byte %00000111
	.byte %00000011
	.byte %00000000

;---End Title Screen PF Data---

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Epilogue
	org $fffc
        .word Start	; reset vector
        .word Start	; BRK vector
